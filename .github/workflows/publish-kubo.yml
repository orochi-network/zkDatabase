name: Publish Kubo Package
on:
  push:
    branches: ['release']

env:
  NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

jobs:
  publish:
    name: Build & Publish package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: git fetch --prune --unshallow

      - name: Get previous version from Git history
        id: get_previous_number
        run: |
          PREVIOUS_VERSION=$(git describe --tags --abbrev=0 2>/dev/null)
          PREVIOUS_NUMBER=$(echo $PREVIOUS_VERSION | sed 's/[^0-9]//g')

          echo "previous_number=${PREVIOUS_NUMBER}" >> "$GITHUB_OUTPUT"

      - name: Check if package.json version is newer
        run: |
          CURRENT_VERSION=$(node -p "require('./packages/kubo/package.json').version")
          CURRENT_NUMBER=$(echo $CURRENT_VERSION | sed 's/[^0-9]//g')

          PREVIOUS_NUMBER=${{ steps.get_previous_number.outputs.previous_number }}

          max_length=$((${#PREVIOUS_NUMBER} > ${#CURRENT_NUMBER} ? ${#PREVIOUS_NUMBER} : ${#CURRENT_NUMBER}))

          FIXED_CURRENT_VERSION=$(echo $CURRENT_NUMBER$(printf -- 0%.s $(seq -s ' ' $((max_length-${#CURRENT_NUMBER})))))

          FIXED_PREVIOUS_VERSION=$(echo $PREVIOUS_NUMBER$(printf -- 0%.s $(seq -s ' ' $((max_length-${#PREVIOUS_NUMBER})))))

          if [ ${FIXED_PREVIOUS_VERSION} -ge ${FIXED_CURRENT_VERSION} ]; then
            echo "Error: Package.json version is not newer than the previous version."
            exit 1
          else
            echo "Package.json version is newer than the previous version."
          fi

      - name: Install dependencies
        run: npm --prefix packages/kubo i

      - name: Publish package to NPM
        run: |
          CURRENT_VERSION=$(node -p "require('./packages/kubo/package.json').version")
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
          npm --prefix packages/kubo run release
          cd ./packages/kubo && git tag $CURRENT_VERSION
          cd ./packages/kubo && git push origin --tags
